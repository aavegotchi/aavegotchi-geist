// SPDX-License-Identifier: MIT LICENSE

pragma solidity ^0.8.1;

uint256 constant ID = uint256(keccak256("com.proofofplay.vrfsystem.v1"));

interface IVRFSystem {
    /**
     * Starts a VRF random number request
     *
     * @param traceId Optional Id to use when tracing the request
     * @return requestId for the random number, will be passed to the callback contract
     */
    function requestRandomNumberWithTraceId(uint256 traceId) external returns (uint256);
}

interface IVRFSystemCallback {
    /**
     * Callback for when a Random Number is delivered
     *
     * @param requestId     Id of the VRF request
     * @param randomNumber   Random number that was generated by the VRF
     */
    function randomNumberCallback(uint256 requestId, uint256 randomNumber) external;
}
